/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pcc;

import java.awt.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author bansa
 */
public class AdminDashBoard extends javax.swing.JFrame {

    /**
     * Creates new form AdminDashBoard
     */
    public AdminDashBoard() {

        initComponents();

    }

    public AdminDashBoard(String userId) {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LeftPanel = new javax.swing.JPanel();
        HomeButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        AddNewItemButton = new javax.swing.JButton();
        ChangePasswordButton = new javax.swing.JButton();
        DeleteItemButton = new javax.swing.JButton();
        LogOutButton = new javax.swing.JButton();
        NewOrderButton = new javax.swing.JButton();
        DynamicPanel = new javax.swing.JPanel();
        Home = new javax.swing.JPanel();
        ImageLabel = new javax.swing.JLabel();
        AddItem = new javax.swing.JPanel();
        AIAddItemButton = new javax.swing.JButton();
        AICategoryLabel = new javax.swing.JLabel();
        AIItemNameLabel = new javax.swing.JLabel();
        AIFullUnitPriceLabel = new javax.swing.JLabel();
        AICategoryComboBox = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        AICategoryTextField = new javax.swing.JTextField();
        AIOtherLabel = new javax.swing.JLabel();
        AIItemNameTextField = new javax.swing.JTextField();
        AIFullUnitPriceTextField = new javax.swing.JTextField();
        AIHalfUnitPriceLabel = new javax.swing.JLabel();
        AIHalfUnitPriceTextField = new javax.swing.JTextField();
        AIResultLabel = new javax.swing.JLabel();
        AICloseButton = new javax.swing.JButton();
        AIUnitAvailableLabel = new javax.swing.JLabel();
        AIUnitsAvailableTextField = new javax.swing.JTextField();
        ChangePassword = new javax.swing.JPanel();
        CPOldPasswordLabel = new javax.swing.JLabel();
        CPNewPasswordLabel = new javax.swing.JLabel();
        CPConfirmPasswordLabel = new javax.swing.JLabel();
        CPChangePasswordButton = new javax.swing.JButton();
        CPResetButton = new javax.swing.JButton();
        CPOldPasswordPasswordField = new javax.swing.JPasswordField();
        CPNewPasswordPasswordField = new javax.swing.JPasswordField();
        CPConfirmPasswordPasswordField = new javax.swing.JPasswordField();
        CPResultLabel = new javax.swing.JLabel();
        NewOrder = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OTable = new javax.swing.JTable();
        OItemCategoryComboBox = new javax.swing.JComboBox();
        OItemCategoryLabel = new javax.swing.JLabel();
        OItemNameLabel = new javax.swing.JLabel();
        OItemNameComboBox = new javax.swing.JComboBox();
        OrderQtyLabel = new javax.swing.JLabel();
        OQtySpinner = new javax.swing.JSpinner();
        OAddButton = new javax.swing.JButton();
        OResetButton = new javax.swing.JButton();
        OCalculateTotalButton = new javax.swing.JButton();
        OTotalLabel = new javax.swing.JLabel();
        ODeleteSelectedRowButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        OTotalTextField = new javax.swing.JTextField();
        OGenerateBillButton = new javax.swing.JButton();
        ManageInventory = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HomeButton.setText("Home");
        HomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Manage Inventory");

        AddNewItemButton.setText("Add New Item");
        AddNewItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewItemButtonActionPerformed(evt);
            }
        });

        ChangePasswordButton.setText("Change Password");
        ChangePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePasswordButtonActionPerformed(evt);
            }
        });

        DeleteItemButton.setText("Delete Item");
        DeleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteItemButtonActionPerformed(evt);
            }
        });

        LogOutButton.setText("Log Out");
        LogOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutButtonActionPerformed(evt);
            }
        });

        NewOrderButton.setText("New Order");
        NewOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewOrderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LeftPanelLayout = new javax.swing.GroupLayout(LeftPanel);
        LeftPanel.setLayout(LeftPanelLayout);
        LeftPanelLayout.setHorizontalGroup(
            LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HomeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
            .addComponent(AddNewItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ChangePasswordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(DeleteItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(LogOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(NewOrderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        LeftPanelLayout.setVerticalGroup(
            LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftPanelLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(HomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(NewOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddNewItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DeleteItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(ChangePasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LogOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        DynamicPanel.setLayout(new java.awt.CardLayout());

        ImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pcc/Images/PCCIMAGE.jpg"))); // NOI18N

        javax.swing.GroupLayout HomeLayout = new javax.swing.GroupLayout(Home);
        Home.setLayout(HomeLayout);
        HomeLayout.setHorizontalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addComponent(ImageLabel)
                .addGap(0, 263, Short.MAX_VALUE))
        );
        HomeLayout.setVerticalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addComponent(ImageLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        DynamicPanel.add(Home, "card5");

        AIAddItemButton.setText("Add Item");
        AIAddItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AIAddItemButtonActionPerformed(evt);
            }
        });

        AICategoryLabel.setText("Category");

        AIItemNameLabel.setText("Item Name");

        AIFullUnitPriceLabel.setText("Full Unit Price");

        AICategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        AICategoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AICategoryComboBoxActionPerformed(evt);
            }
        });

        jButton1.setText("Reset");

        AIOtherLabel.setText("Other(Please Specify)");

        AIHalfUnitPriceLabel.setText("Half Unit Price");

        AICloseButton.setText("CLOSE(X)");
        AICloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AICloseButtonActionPerformed(evt);
            }
        });

        AIUnitAvailableLabel.setText("Units Available");

        javax.swing.GroupLayout AddItemLayout = new javax.swing.GroupLayout(AddItem);
        AddItem.setLayout(AddItemLayout);
        AddItemLayout.setHorizontalGroup(
            AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddItemLayout.createSequentialGroup()
                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddItemLayout.createSequentialGroup()
                        .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddItemLayout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addComponent(AIResultLabel))
                            .addGroup(AddItemLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AIHalfUnitPriceLabel)
                                    .addComponent(AIFullUnitPriceLabel)
                                    .addComponent(AIItemNameLabel)
                                    .addComponent(AICategoryLabel)
                                    .addComponent(AIUnitAvailableLabel))
                                .addGap(57, 57, 57)
                                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AIHalfUnitPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AIItemNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AIFullUnitPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AIUnitsAvailableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AICategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AICategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AIOtherLabel))
                    .addGroup(AddItemLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(AIAddItemButton)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(329, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddItemLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(AICloseButton)
                .addGap(52, 52, 52))
        );
        AddItemLayout.setVerticalGroup(
            AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddItemLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(AIResultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AICategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AICategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AIOtherLabel)
                    .addComponent(AICategoryLabel))
                .addGap(26, 26, 26)
                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AIItemNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AIItemNameLabel))
                .addGap(29, 29, 29)
                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AIUnitsAvailableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AIUnitAvailableLabel))
                .addGap(18, 18, 18)
                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AddItemLayout.createSequentialGroup()
                        .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AIHalfUnitPriceLabel)
                            .addComponent(AIHalfUnitPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(AIFullUnitPriceLabel))
                    .addComponent(AIFullUnitPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AIAddItemButton)
                    .addComponent(jButton1))
                .addGap(29, 29, 29)
                .addComponent(AICloseButton)
                .addGap(29, 29, 29))
        );

        DynamicPanel.add(AddItem, "card3");

        CPOldPasswordLabel.setText("Old Password");

        CPNewPasswordLabel.setText("New Password");

        CPConfirmPasswordLabel.setText("Confirm Password");

        CPChangePasswordButton.setText("Change Password");
        CPChangePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPChangePasswordButtonActionPerformed(evt);
            }
        });

        CPResetButton.setText("Reset");

        javax.swing.GroupLayout ChangePasswordLayout = new javax.swing.GroupLayout(ChangePassword);
        ChangePassword.setLayout(ChangePasswordLayout);
        ChangePasswordLayout.setHorizontalGroup(
            ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChangePasswordLayout.createSequentialGroup()
                .addGroup(ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChangePasswordLayout.createSequentialGroup()
                        .addGroup(ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ChangePasswordLayout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addGroup(ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CPConfirmPasswordLabel)
                                    .addComponent(CPNewPasswordLabel)
                                    .addComponent(CPOldPasswordLabel)))
                            .addGroup(ChangePasswordLayout.createSequentialGroup()
                                .addGap(161, 161, 161)
                                .addComponent(CPChangePasswordButton)))
                        .addGroup(ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ChangePasswordLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(CPResetButton))
                            .addGroup(ChangePasswordLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CPOldPasswordPasswordField)
                                    .addComponent(CPNewPasswordPasswordField)
                                    .addComponent(CPConfirmPasswordPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)))))
                    .addGroup(ChangePasswordLayout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(CPResultLabel)))
                .addContainerGap(473, Short.MAX_VALUE))
        );
        ChangePasswordLayout.setVerticalGroup(
            ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChangePasswordLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(CPResultLabel)
                .addGap(45, 45, 45)
                .addGroup(ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CPOldPasswordLabel)
                    .addComponent(CPOldPasswordPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CPNewPasswordLabel)
                    .addComponent(CPNewPasswordPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CPConfirmPasswordLabel)
                    .addComponent(CPConfirmPasswordPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(ChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CPChangePasswordButton)
                    .addComponent(CPResetButton))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        DynamicPanel.add(ChangePassword, "card2");

        OTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEM NAME", "CATEGORY NAME", "PIECES AVAILABLE", "QUANTITY", "HALF(RATE)", "FULL(RATE)", "PRICE"
            }
        ));
        jScrollPane1.setViewportView(OTable);

        OItemCategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        OItemCategoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OItemCategoryComboBoxActionPerformed(evt);
            }
        });

        OItemCategoryLabel.setText("Select Category");

        OItemNameLabel.setText("Select Item");

        OItemNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        OrderQtyLabel.setText("Quantity");

        OAddButton.setText("Add");
        OAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OAddButtonActionPerformed(evt);
            }
        });

        OResetButton.setText("Reset");

        OCalculateTotalButton.setText("Calculate Total");
        OCalculateTotalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OCalculateTotalButtonActionPerformed(evt);
            }
        });

        OTotalLabel.setText("Total");

        ODeleteSelectedRowButton.setText("Delete Selected Row");
        ODeleteSelectedRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ODeleteSelectedRowButtonActionPerformed(evt);
            }
        });

        jButton3.setText("Inventory Status");

        OTotalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OTotalTextFieldActionPerformed(evt);
            }
        });

        OGenerateBillButton.setText("Generate Bill");
        OGenerateBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OGenerateBillButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NewOrderLayout = new javax.swing.GroupLayout(NewOrder);
        NewOrder.setLayout(NewOrderLayout);
        NewOrderLayout.setHorizontalGroup(
            NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewOrderLayout.createSequentialGroup()
                .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NewOrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OItemCategoryLabel)
                            .addComponent(OItemNameLabel)
                            .addComponent(OrderQtyLabel))
                        .addGap(44, 44, 44)
                        .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OQtySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(OItemCategoryComboBox, 0, 136, Short.MAX_VALUE)
                                .addComponent(OItemNameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(NewOrderLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(NewOrderLayout.createSequentialGroup()
                                .addComponent(OAddButton)
                                .addGap(31, 31, 31)
                                .addComponent(OResetButton)))))
                .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NewOrderLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewOrderLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(OGenerateBillButton)
                        .addGap(194, 194, 194))))
            .addGroup(NewOrderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ODeleteSelectedRowButton)
                .addGap(121, 121, 121)
                .addComponent(OCalculateTotalButton)
                .addGap(52, 52, 52)
                .addComponent(OTotalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        NewOrderLayout.setVerticalGroup(
            NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewOrderLayout.createSequentialGroup()
                .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NewOrderLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OItemCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OItemCategoryLabel))
                        .addGap(44, 44, 44)
                        .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OItemNameLabel)
                            .addComponent(OItemNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OrderQtyLabel)
                            .addComponent(OQtySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OAddButton)
                            .addComponent(OResetButton)))
                    .addGroup(NewOrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(OCalculateTotalButton)
                        .addComponent(OTotalLabel)
                        .addComponent(OTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ODeleteSelectedRowButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(NewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewOrderLayout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewOrderLayout.createSequentialGroup()
                        .addComponent(OGenerateBillButton)
                        .addGap(30, 30, 30))))
        );

        DynamicPanel.add(NewOrder, "card6");

        javax.swing.GroupLayout ManageInventoryLayout = new javax.swing.GroupLayout(ManageInventory);
        ManageInventory.setLayout(ManageInventoryLayout);
        ManageInventoryLayout.setHorizontalGroup(
            ManageInventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 881, Short.MAX_VALUE)
        );
        ManageInventoryLayout.setVerticalGroup(
            ManageInventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 449, Short.MAX_VALUE)
        );

        DynamicPanel.add(ManageInventory, "card6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(LeftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DynamicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DynamicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(LeftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddNewItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewItemButtonActionPerformed
        FillCategoryComboBox(AICategoryComboBox);
        DynamicPanel.removeAll();
        DynamicPanel.add(AddItem);
        Home.setVisible(false);
        ChangePassword.setVisible(false);
        NewOrder.setVisible(false);
        AddItem.setVisible(true);
        DynamicPanel.revalidate();
    }//GEN-LAST:event_AddNewItemButtonActionPerformed
    private void ChangePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePasswordButtonActionPerformed
        DynamicPanel.removeAll();
        DynamicPanel.add(ChangePassword);
        Home.setVisible(false);
        NewOrder.setVisible(false);
        AddItem.setVisible(false);
        ChangePassword.setVisible(true);

    }//GEN-LAST:event_ChangePasswordButtonActionPerformed
    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButtonActionPerformed
        DynamicPanel.removeAll();
        DynamicPanel.add(Home);
        AddItem.setVisible(false);
        NewOrder.setVisible(false);
        ChangePassword.setVisible(false);
        Home.setVisible(true);
        DynamicPanel.revalidate();
    }//GEN-LAST:event_HomeButtonActionPerformed
    private void LogOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_LogOutButtonActionPerformed
    private void CPChangePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPChangePasswordButtonActionPerformed
        Connection conn;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcc", "root", "");
            Statement st = conn.createStatement();
            if (CPNewPasswordPasswordField.getText().equals(CPConfirmPasswordPasswordField.getText())) {
                int i = st.executeUpdate("update Login set PASSWORD = '" + CPNewPasswordPasswordField.getText() + "' where USERNAME = 'admin' and PASSWORD ='" + CPOldPasswordPasswordField.getText() + "'");
                if (i == 1) {
                    CPResultLabel.setText("Password Changed Successfully");
                } else {
                    CPResultLabel.setText("Incorrect Old Password");
                }
            } else {
                CPResultLabel.setText("Password and Confirm Password should be same");
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CPChangePasswordButtonActionPerformed
    private void AIAddItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AIAddItemButtonActionPerformed
        Connection conn;
        String Category = AICategoryTextField.getText();
        String ItemName = AIItemNameTextField.getText();
        int HalfUnitPrice = Integer.parseInt(AIHalfUnitPriceTextField.getText());
        int FullUnitPrice = Integer.parseInt(AIFullUnitPriceTextField.getText());
        float UnitsAvailable = Float.parseFloat(AIUnitsAvailableTextField.getText());
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcc", "root", "");
            Statement st = conn.createStatement();
            String query1 = "insert into item (ITEM_CATEGORY,ITEM_NAME,HALF_UNIT_PRICE,FULL_UNIT_PRICE,LAST_MODIFIED_DATE) values ('" + Category + "','" + ItemName + "'," + HalfUnitPrice + "," + FullUnitPrice + ",now())";
            boolean i = st.execute(query1);
            String query2 = "insert into inventory (ITEM_NAME,PIECES_AVAILABLE,LAST_MODIFIED_DATE) values ('" + ItemName + "'," + UnitsAvailable + ",now())";
            boolean j = st.execute(query2);
            if (i == true && j == true) {
                AIResultLabel.setText("Item Added Successfully");
            } else {
                AIResultLabel.setText("ERROR IN UR SUBMISSION");
            }

        } catch (SQLException ex) {
            Logger.getLogger(AdminDashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AIAddItemButtonActionPerformed

    private void AICloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AICloseButtonActionPerformed
        DynamicPanel.removeAll();
        DynamicPanel.add(Home);
        AddItem.setVisible(false);
        Home.setVisible(true);
        DynamicPanel.revalidate();
    }//GEN-LAST:event_AICloseButtonActionPerformed
    private void AICategoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AICategoryComboBoxActionPerformed
        // TODO add your handling code here:
        /*if(((String)AICategoryComboBox.getSelectedItem()).equals("Other"))
         {
         AIOtherLabel.setVisible(true);
         AICategoryTextField.setVisible(true);
         }*/
    }//GEN-LAST:event_AICategoryComboBoxActionPerformed
    private void DeleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteItemButtonActionPerformed
        DeleteItem d = new DeleteItem();
        d.setVisible(true);
    }//GEN-LAST:event_DeleteItemButtonActionPerformed
    private void NewOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewOrderButtonActionPerformed
        FillCategoryComboBox(OItemCategoryComboBox);
        DynamicPanel.removeAll();
        AddItem.setVisible(false);
        Home.setVisible(false);
        ChangePassword.setVisible(false);
        DynamicPanel.add(NewOrder);
        NewOrder.setVisible(true);
        DynamicPanel.revalidate();
    }//GEN-LAST:event_NewOrderButtonActionPerformed

    private void OAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OAddButtonActionPerformed
        String ItemName = (String) OItemNameComboBox.getSelectedItem();
        String ITEM_NAME = null;
        int HALF_UNIT_PRICE = 0, FULL_UNIT_PRICE = 0;
        float PIECES_AVAILABLE = 0;
        try {
            System.out.println(ItemName);
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcc", "root", "");
            Statement st = conn.createStatement();
            ResultSet set1 = st.executeQuery("select ITEM_NAME,HALF_UNIT_PRICE,FULL_UNIT_PRICE from item where ITEM_NAME ='" + ItemName + "'");
            while (set1.next()) {
                ITEM_NAME = set1.getString("ITEM_NAME");
                System.out.println(ITEM_NAME);
                HALF_UNIT_PRICE = Integer.parseInt(set1.getString("HALF_UNIT_PRICE"));
                FULL_UNIT_PRICE = Integer.parseInt(set1.getString("FULL_UNIT_PRICE"));
            }
            ResultSet set2 = st.executeQuery("select PIECES_AVAILABLE from inventory where ITEM_NAME = '" + ItemName + "'");
            while (set2.next()) {
                PIECES_AVAILABLE = Float.parseFloat(set2.getString("PIECES_AVAILABLE"));
            }
            DefaultTableModel model = (DefaultTableModel) OTable.getModel();
            if (Float.parseFloat(OQtySpinner.getValue().toString()) != 0 && PIECES_AVAILABLE >= Float.parseFloat(OQtySpinner.getValue().toString())) {
                model.addRow(new Object[]{OItemNameComboBox.getSelectedItem(), OItemCategoryComboBox.getSelectedItem(), PIECES_AVAILABLE, OQtySpinner.getValue(), HALF_UNIT_PRICE, FULL_UNIT_PRICE});
            } else {
                JOptionPane.showMessageDialog(null, "Quantity Should be Greater than zero or U don't Have Enough Quantity");
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_OAddButtonActionPerformed

    private void OItemCategoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OItemCategoryComboBoxActionPerformed
        FillItemNameComboBox();
    }//GEN-LAST:event_OItemCategoryComboBoxActionPerformed

    private void ODeleteSelectedRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ODeleteSelectedRowButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) OTable.getModel();
        try {
            int SelectedRowIndex[] = OTable.getSelectedRows();
            System.out.println(SelectedRowIndex.length);
            for (int i = 0; i < SelectedRowIndex.length; i++) {
                model.removeRow(SelectedRowIndex[i]);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_ODeleteSelectedRowButtonActionPerformed

    private void OTotalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OTotalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OTotalTextFieldActionPerformed

    private void OCalculateTotalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OCalculateTotalButtonActionPerformed
        short ld = 0;
        DefaultTableModel model = (DefaultTableModel) OTable.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (Float.parseFloat(OTable.getValueAt(i, 3).toString()) % 1 != 0) {
                ld = (short) (Float.parseFloat(OTable.getValueAt(i, 3).toString()) / 1);
                OTable.setValueAt((ld * Integer.parseInt(OTable.getValueAt(i, 5).toString())) + (Integer.parseInt(OTable.getValueAt(i, 4).toString())), i, 6);
            } else {
                OTable.setValueAt(Float.parseFloat((OTable.getValueAt(i, 3).toString())) * Integer.parseInt(OTable.getValueAt(i, 5).toString()), i, 6);
            }
        }
        float totalPrice = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            totalPrice += Float.parseFloat(OTable.getValueAt(i, 6).toString());
        }
        OTotalTextField.setText(String.valueOf(totalPrice));
        OTotalTextField.disable();
    }//GEN-LAST:event_OCalculateTotalButtonActionPerformed

    private void OGenerateBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OGenerateBillButtonActionPerformed
        BillReceipt br = new BillReceipt(OTable,OTotalTextField);   
        br.setVisible(true);
    }//GEN-LAST:event_OGenerateBillButtonActionPerformed
    public void FillCategoryComboBox(javax.swing.JComboBox ComboBoxName) {
        SpinnerNumberModel model = new SpinnerNumberModel(0, 0, 1000, .5);
        OQtySpinner.setModel(model);
        ComboBoxName.removeAllItems();
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcc", "root", "");
            Statement st = conn.createStatement();
            String query = "SELECT DISTINCT ITEM_CATEGORY FROM item";
            ResultSet set = st.executeQuery(query);
            while (set.next()) {
                ComboBoxName.addItem(set.getString("ITEM_CATEGORY"));
            }
            ComboBoxName.addItem("Other");
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void FillItemNameComboBox() {
        OItemNameComboBox.removeAllItems();
        String si = (String) OItemCategoryComboBox.getSelectedItem();
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcc", "root", "");
            Statement st = conn.createStatement();
            String query = "SELECT ITEM_NAME FROM item WHERE ITEM_CATEGORY = '" + si + "'";
            ResultSet set = st.executeQuery(query);
            while (set.next()) {
                System.out.println(set.getString("ITEM_NAME"));
                OItemNameComboBox.addItem(set.getString("ITEM_NAME"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashBoard().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AIAddItemButton;
    private javax.swing.JComboBox AICategoryComboBox;
    private javax.swing.JLabel AICategoryLabel;
    private javax.swing.JTextField AICategoryTextField;
    private javax.swing.JButton AICloseButton;
    private javax.swing.JLabel AIFullUnitPriceLabel;
    private javax.swing.JTextField AIFullUnitPriceTextField;
    private javax.swing.JLabel AIHalfUnitPriceLabel;
    private javax.swing.JTextField AIHalfUnitPriceTextField;
    private javax.swing.JLabel AIItemNameLabel;
    private javax.swing.JTextField AIItemNameTextField;
    private javax.swing.JLabel AIOtherLabel;
    private javax.swing.JLabel AIResultLabel;
    private javax.swing.JLabel AIUnitAvailableLabel;
    private javax.swing.JTextField AIUnitsAvailableTextField;
    private javax.swing.JPanel AddItem;
    private javax.swing.JButton AddNewItemButton;
    private javax.swing.JButton CPChangePasswordButton;
    private javax.swing.JLabel CPConfirmPasswordLabel;
    private javax.swing.JPasswordField CPConfirmPasswordPasswordField;
    private javax.swing.JLabel CPNewPasswordLabel;
    private javax.swing.JPasswordField CPNewPasswordPasswordField;
    private javax.swing.JLabel CPOldPasswordLabel;
    private javax.swing.JPasswordField CPOldPasswordPasswordField;
    private javax.swing.JButton CPResetButton;
    private javax.swing.JLabel CPResultLabel;
    private javax.swing.JPanel ChangePassword;
    private javax.swing.JButton ChangePasswordButton;
    private javax.swing.JButton DeleteItemButton;
    private javax.swing.JPanel DynamicPanel;
    private javax.swing.JPanel Home;
    private javax.swing.JButton HomeButton;
    private javax.swing.JLabel ImageLabel;
    private javax.swing.JPanel LeftPanel;
    private javax.swing.JButton LogOutButton;
    private javax.swing.JPanel ManageInventory;
    private javax.swing.JPanel NewOrder;
    private javax.swing.JButton NewOrderButton;
    private javax.swing.JButton OAddButton;
    private javax.swing.JButton OCalculateTotalButton;
    private javax.swing.JButton ODeleteSelectedRowButton;
    private javax.swing.JButton OGenerateBillButton;
    private javax.swing.JComboBox OItemCategoryComboBox;
    private javax.swing.JLabel OItemCategoryLabel;
    private javax.swing.JComboBox OItemNameComboBox;
    private javax.swing.JLabel OItemNameLabel;
    private javax.swing.JSpinner OQtySpinner;
    private javax.swing.JButton OResetButton;
    private javax.swing.JTable OTable;
    private javax.swing.JLabel OTotalLabel;
    private javax.swing.JTextField OTotalTextField;
    private javax.swing.JLabel OrderQtyLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
